Mind Map generated by NB MindMap plugin   
> __version__=`1.1`
---

# TypeClass

## 1\.定义

### 有泛型的trait，定义了我们想要实现的功能

## 2\.实现步骤\(Demo\)

### 准备：定义一个数据结构
- FILE
<pre>file:///Users/yan.zhou/Desktop/code/scala-tutorial/src/main/scala/cats/introduction/typeclass/Json.scala</pre>

### 1\.定义typeClass

#### trait JsonWriter\[A\]

### 2\.定义TypeeClass Instance

#### 实现 TypeClass，类似Java内部类

#### a\.使用implicit修饰的type class\(trait\)实例

### 3\.定义TypeClass Interface

#### 接收Instance作为implicit参数的泛型方法

#### 创建方式

##### Interface Object
- FILE
<pre>file:///Users/yan.zhou/Desktop/code/scala-tutorial/src/main/scala/cats/introduction/typeclass/InterfaceObject.scala</pre>

##### Interface Syntax（常用）
- FILE
<pre>file:///Users/yan.zhou/Desktop/code/scala-tutorial/src/main/scala/scalacats/introduction/typeclass/InterfaceSyntax.scala</pre>

### 4\.另一种用法
- FILE
<pre>file:///Users/yan.zhou/Desktop/code/scala-tutorial/src/main/scala/scalacats/introduction/typeclass/ScalaTypeclassInterface.scala</pre>

## 3\.Cats中的TypeClass（以show为例）
> leftSide=`true`


### 1\.TypeClass本身定义为trait

### 2\.每个TypeClass都有伴生对象
> leftSide=`true`


#### a\.含有apply方法，定位制定类型的instance

#### b\.1个或多个辅助构造方法，创建instance
> leftSide=`true`


#### c\.具备interface syntanx，在cats\.syntanx包中
> leftSide=`true`


## 4\.如何学习TypeClass
> leftSide=`true`


### 1\.该Typeclass提供的功能

### 2\.该Typeclass遵守的法则
> leftSide=`true`


### 3\.该TypeClass在Cats中如何实现
> leftSide=`true`

